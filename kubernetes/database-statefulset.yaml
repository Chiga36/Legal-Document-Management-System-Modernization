apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: legal-dms-mongodb
  namespace: legal-dms
  labels:
    app: legal-dms
    component: mongodb
spec:
  serviceName: "mongodb"
  replicas: 3
  selector:
    matchLabels:
      app: legal-dms
      component: mongodb
  template:
    metadata:
      labels:
        app: legal-dms
        component: mongodb
    spec:
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
      - name: mongodb
        image: mongo:5.0
        imagePullPolicy: Always
        ports:
        - containerPort: 27017
          name: mongodb
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: legal-dms-mongodb
              key: root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: legal-dms-mongodb
              key: root-password
        - name: MONGO_INITDB_DATABASE
          value: "legal_dms"
        command:
        - mongod
        - "--bind_ip_all"
        - "--replSet"
        - "rs0"
        - "--auth"
        - "--enableEncryption"
        - "--encryptionKeyFile"
        - "/etc/mongodb/encryption-key"
        - "--wiredTigerCacheSizeGB"
        - "1"
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /etc/mongodb
          readOnly: true
        - name: mongodb-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mongodb-config
        secret:
          secretName: legal-dms-mongodb-config
          defaultMode: 0400
      - name: mongodb-scripts
        configMap:
          name: legal-dms-mongodb-init
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "managed-premium"
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: legal-dms-mongodb
  namespace: legal-dms
  labels:
    app: legal-dms
    component: mongodb
spec:
  clusterIP: None
  selector:
    app: legal-dms
    component: mongodb
  ports:
  - port: 27017
    targetPort: mongodb
    protocol: TCP
    name: mongodb
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: legal-dms-mongodb-pdb
  namespace: legal-dms
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: legal-dms
      component: mongodb